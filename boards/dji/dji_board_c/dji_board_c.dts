/dts-v1/;
#include <st/f4/stm32f407Xg.dtsi>
#include <st/f4/stm32f407i(e-g)hx-pinctrl.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <zephyr/dt-bindings/led/led.h>

/ {
	model = "DJI RoboMaster Development Board C";
	compatible = "st";

	dwt: dwt@0 {
		compatible = "arm,dwt";
		status = "okay";
	};

	chosen {
		zephyr,console = &usart1;
		zephyr,shell-uart = &usart1;
		zephyr,sram = &sram0;
		zephyr,flash = &flash0;
		zephyr,ccm = &ccm0;
		zephyr,canbus = &can1;
		zephyr,cpu-load-counter = &dwt;
	};

	leds: leds {
		compatible = "gpio-leds";
		status = "okay";

		blue_led: blue_led {
			gpios = <&gpioh 11 GPIO_ACTIVE_HIGH>;
			label = "Blue LED";
		};

		green_led: green_led {
			gpios = <&gpioh 12 GPIO_ACTIVE_HIGH>;
			label = "Green LED";
		};

		red_led: red_led {
			gpios = <&gpioh 13 GPIO_ACTIVE_HIGH>;
			label = "Red LED";
		};
	};

	aliases {
		led0 = &blue_led;
		led1 = &green_led;
		led2 = &red_led;
		die-temp0 = &die_temp;
		volt-sensor0 = &vref;
		volt-sensor1 = &vbat;
	};
};

&clk_lsi {
	status = "okay";
};

&clk_hse {
	clock-frequency = <DT_FREQ_M(12)>;
	status = "okay";
};

&pll {
	div-m = <6>;
	mul-n = <168>;
	div-p = <2>;
	div-q = <7>;
	clocks = <&clk_hse>;
	status = "okay";
};

&rcc {
	clocks = <&pll>;
	clock-frequency = <DT_FREQ_M(168)>;
	ahb-prescaler = <1>;
	apb1-prescaler = <4>;
	apb2-prescaler = <2>;
	status = "okay";
};

&usart6 {
	pinctrl-0 = <&usart6_tx_pg14 &usart6_rx_pg9>;
	pinctrl-names = "default";
	current-speed = <115200>;
	dmas = <&dma2 6 (STM32_DMA_PERIPH_TX | STM32_DMA_PRIORITY_HIGH)>,
		   <&dma2 2 (STM32_DMA_PERIPH_RX | STM32_DMA_PRIORITY_HIGH)>;
	dma-names = "tx", "rx";
	status = "okay";
};

&usart1 {
	pinctrl-0 = <&usart1_tx_pa9 &usart1_rx_pb7>;
	pinctrl-names = "default";
	current-speed = <115200>;
	dmas = <&dma2 5 (STM32_DMA_PERIPH_TX | STM32_DMA_PRIORITY_HIGH)>,
		   <&dma2 7 (STM32_DMA_PERIPH_RX | STM32_DMA_PRIORITY_HIGH)>;
	dma-names = "tx", "rx";
	status = "okay";
};

&rtc {
	clocks = <&rcc STM32_CLOCK_BUS_APB1 0x10000000>,
			 <&rcc STM32_SRC_LSI RTC_SEL(2)>;
	status = "okay";

	backup_regs {
		status = "okay";
	};
};

zephyr_udc0: &usbotg_fs {
	pinctrl-0 = <&usb_otg_fs_dm_pa11 &usb_otg_fs_dp_pa12>;
	pinctrl-names = "default";
	status = "okay";
};

&can1 {
	pinctrl-0 = <&can1_rx_pd0 &can1_tx_pd1>;
	pinctrl-names = "default";
	status = "okay";
};

&adc1 {
	st,adc-prescaler = <4>;
	status = "okay";
};

&die_temp {
	status = "okay";
};

&vref {
	status = "okay";
};

&vbat {
	status = "okay";
};

&dma1 {
	status = "okay";
};

&dma2 {
	status = "okay";
};

&spi1 {
	pinctrl-0 = <&spi1_sck_pb3 &spi1_miso_pb4 &spi1_mosi_pa7>;
	pinctrl-names = "default";
	status = "okay";
	cs-gpios = <&gpioa 4 GPIO_ACTIVE_LOW>, <&gpiob 0 GPIO_ACTIVE_LOW>;

	bmi088_accel: bmi088_accel@0 {
		compatible = "bosch,bmi08x-accel";
		reg = <0>;
		spi-max-frequency = <10000000>;
		int-gpios = <&gpioc 4 GPIO_ACTIVE_HIGH>;
		accel-hz = "400";
		accel-fs = <16>;

		int1-map-io = <1>; /* 将数据就绪中断映射到INT1 */
		int1-conf-io = <10>; /* 设置INT1为推挽输出和有效高电平 */
		int2-map-io = <0>;
		int2-conf-io = <0>;

		data-sync = <&bmi088_gyro>;
	};

	bmi088_gyro: bmi088_gyro@1 {
		compatible = "bosch,bmi08x-gyro";
		reg = <1>;
		spi-max-frequency = <10000000>;
		int-gpios = <&gpioc 5 GPIO_ACTIVE_HIGH>;
		gyro-hz = "400_47";
		gyro-fs = <2000>;

		int3-4-map-io = <1>; /* 将数据就绪中断映射到INT3 */
		int3-4-conf-io = <1>; /* 设置INT3为有效高电平和推挽输出 */

		data-sync;
	};
};